package com.example.collectionservice.controllers;

import com.example.collectionservice.dto.CollectionPostCreateDTO;
import com.example.collectionservice.dto.CollectionResponseDTO;
import com.example.collectionservice.models.Collection;
import com.example.collectionservice.services.CollectionPostService;
import com.example.collectionservice.services.CollectionService;
import jakarta.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller // This means that this class is a Controller
public class CollectionPostController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private CollectionPostService collectionPostService;

    @PostMapping(path="api/collections/{id}/posts") // Map ONLY POST Requests
    public @ResponseBody ResponseEntity AddCollectionPost (@PathVariable("id") Integer id, @Valid @RequestBody CollectionPostCreateDTO requestBody) {
        Collection collection = collectionPostService.AddPost(id, requestBody);
        return ResponseEntity.status(201).body(collection);
    }

    @GetMapping(path="api/collections/{id}/posts")
    public @ResponseBody ResponseEntity GetAllPostsForCollection (@PathVariable("id") Integer id) {
        CollectionResponseDTO collection = collectionPostService.GetAllPostsForCollection(id);
        return ResponseEntity.status(200).body(collection);
    }

    //users
    @GetMapping(path="/api/collections/user/{id}")
    public @ResponseBody ResponseEntity GetCollectionsForUser( @PathVariable("id") Integer id) {
        Iterable<CollectionResponseDTO> collections = collectionPostService.FindAllByUserId(id);
        return  ResponseEntity.status(200).body(collections);
    }

    @GetMapping(path="/api/collections/user/{id}/public")
    public @ResponseBody ResponseEntity GetPublicCollectionsForUser( @PathVariable("id") Integer id) {
        Iterable<CollectionResponseDTO> collections = collectionPostService.FindPublicCollectionsForUser(id);
        return  ResponseEntity.status(200).body(collections);
    }
}
